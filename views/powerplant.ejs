<!DOCTYPE html>
<html>
    <head>
        <title><%=title%></title>
        <script src="https://code.jquery.com/jquery-1.10.1.min.js"></script>
        <script src="../../socket.io/socket.io.js"></script>
        <script>
            var socket = io.connect('http://localhost:3000');
            socket.on('msg', function (data) {
                console.log(data.msg);
            });

            socket.on('userConnect', function (data) {
                console.log("connect");
                let obj = $(`#${data.id}`).find('.offline');
                obj.text('ONLINE');
                obj.removeClass('offline');
                obj.addClass('online');
            });

            socket.on('userDisconnect', function (data) {
                console.log("disconnect");
                let obj = $(`#${data.id}`).find('.online');
                obj.text('OFFLINE');
                obj.removeClass('online');
                obj.addClass('offline');
            });

            socket.on('userRegister', function (data) {
                console.log("reigster");
                let tableRow = `<tr id=${data.id}>
                    <td> <a href=${data.id}>${data.username}</a></td>
                    <td class="offline">OFFLINE</td>
                    <td>Outage: <span class='outage'>No.</span></td>
                    <td><button class='delete-btn'>Delete</button></td>
                    <td><form class="blockuser"><input type='number' min="10" max="100" value="10"><input type="submit" value="BLOCK"></form></td>
                    </tr>`;
                $('#prosumerTable').append(tableRow);
            });
          </script>
        <link rel="stylesheet" type="text/css" href="/css/style.css">
    </head>
    <body>
        <%- include('header'); %>
        <div class="content">
            <h1>Powerplant</h1>
            <div>
                <table>
                    <tr><td>production</td><td id="production"></td></tr>
                    <tr><td>status</td><td id="status"></td></tr>
                    <tr><td>market demand</td><td id="demand"></td></tr>
                    <tr><td>electricity price</td><td id="price"></td></tr>
                    <tr><td>modeled electricity price</td><td id="modeledPrice"></td></tr>
                    <tr><td>buffer</td><td id="buffer"></td></tr>
                    <tr><td>ratio</td><td id="ratio"></td></tr>
                </table>
            </div>
            <hr>
            <div>
                <p id="input_error"></p>
                Target production <input type="number" min="0" max="1000" placeholder="0-1000" id="target_production"> kW<br>
                <button id="start_button">START/UPDATE</button>
                <button id="stop_button">STOP</button>
            </div>
            <hr>
            <div>
                <p>Set a new electricity price</p>
                <p id="price_input_error"></p>
                Set price <input type="number" min="0" placeholder="price" id="price_input"> Ã¶re/kWh<br>
                <button id="set_price_button">Set Price</button>
            </div>
            <hr>

            <div>
                <p>Control the ratio of how much of the electricity is sold to the market and how much is put in the buffer. (0.0 = no power to buffer, all to market)</p>
                <form id="ratioForm">
                    Set ratio: <input type="number" name="overRatio" min=0 max=1 step=0.05>
                    <input type="submit" value="Submit">
                </form>
            </div>
            
            <hr>
            <div class="profile-pic">
                <img src="/picture" alt="no picture found" onerror="this.src='/img/house.jpg';"> 
            </div>

            <div>
                <table id='prosumerTable'>
                    <tr>
                        <th>Name</th><th>Status</th><th>Blacked</th><th>Delete User</th><th>block for x seconds</th>
                    </tr>
                    <% for (var i = 0; i < prosumers.length; i++) { %>
                        <tr id="<%= prosumers[i].id %>">
                            <td> <a href='/dashboard/<%= prosumers[i].id %>'><%= prosumers[i].username %></a> </td>
                            <% if (prosumers[i].online) { %>
                                <td class="online">ONLINE</td>
                            <% }else{ %>
                                <td class="offline">OFFLINE</td>
                            <% } %>
                            <td>Outage: <span class='outage'>No.</span></td>
                            <td><button class='delete-btn'>Delete</button></td>
                            <td><form class="blockuser"><input type='number' min="10" max="100" value="10"><input type="submit" value="BLOCK"></form></td>
                        </tr>
                    <% } %>
                </table>
            </div>
        </div>
        

        <script>

            const id = "<%= id%>";

            $('.delete-btn').click((e) => {
                let deleteId = e.target.parentElement.parentElement.id;
     
                $.post('../deleteProsumer', {id: deleteId}, (data, status) => {
    
                    if (status == 'success') {
                        let obj = $(`#${deleteId}`);
                
                        obj.remove();
                    }
                });
            });

            // start, stop, set production of plant
            $("#start_button").click((e) => {
                let target = $("#target_production")[0].valueAsNumber;
                if (!isNaN(target) && target >= 0 && target <= 1000) {
                    $.post("../data/powerplant/update", {target: target}, (e) => {
                        console.log(e);
                        if (e.status) {
                            $("#status").text(`${e.status}`);
                        }
                    });
                }
            });

            $("#stop_button").click((e) => {
                $.post("../data/powerplant/update", {target: 0}, (e) => {
                    console.log(e);
                   
                });
            });

            $("#target_production").on('input', (e) => {
                let target = $("#target_production")[0].valueAsNumber;

                if (target < 0){
                    $("#input_error").text("number is to small");
                }else if (isNaN(target)){
                    $("#input_error").text("please enter a number");
                }else if (target > 1000){
                    $("#input_error").text("number is to large");
                }else{
                    $("#input_error").text("");
                }
            });

            // price input
            $("#price_input").on('input', (e) => {
                let target = $("#price_input")[0].valueAsNumber;

                if (isNaN(target)){
                    $("#price_input_error").text("please enter a number");
                }else{
                    $("#price_input_error").text("");
                }
            });

            $("#set_price_button").click((e) => {
                let price = $("#price_input")[0].valueAsNumber;
                if (!isNaN(price)) {
                    $.post("../data/price", {price: price}, (e) => {
                        console.log(e);
                        if (e.price) {
                            $("#price").text(`${e.price} ${e.unit}`);
                        }
                    });
                }
            });

            $("#ratioForm").submit((e)=>{
                e.preventDefault();
                ratio = {ratio: e.target[0].value};
                $("#ratio").text(`${ratio.ratio}`);
                $.post('../data/powerplant/ratio', ratio);
            });

            $(".blockuser").submit((e)=>{
                e.preventDefault();
                let time = e.target[0].valueAsNumber;
                let id = e.target.parentElement.parentElement.id;
                $.post('../blockProsumer', {time: time, id: id});
            });



            
            var price = null;
            var production = null;
            var status = null;
            var demand = null;
            var modeledPrice = null;
            var buffer = null;
            var ratio = null;
            

            function update() {
                
                $.get("../data/powerplant/status", (data, status) => {
                    status = data;
                    $("#status").text(`${status.status}`);
                });  

                $.get("../data/model/price", (data, status) => {
                    modeledPrice = data;
                    $("#modeledPrice").text(`${ Math.round( modeledPrice.price  * 1000 + Number.EPSILON ) / 1000} ${modeledPrice.unit}`);
                }); 
                
                $.get("../data/price", (data, status) => {
                    price = data;
                    $("#price").text(`${price.price} ${price.unit}`);
                });  

                $.get("../data/demand", (data, status) => {
                    demand = data;
                    $("#demand").text(`${ Math.round( demand.val  * 1000 + Number.EPSILON ) / 1000} ${demand.unit}`);
                }); 

                $.get("../data/powerplant/production", (data, status) => {
                    production = data;
                    $("#production").text(`${production.production } ${production.unit}`);
                }); 

                $.get("../data/powerplant/ratio", (data, status) => {
                    ratio = data;
                    $("#ratio").text(`${ratio.ratio}`);
                }); 

                $.get("../data/powerplant/buffer", (data, status) => {
                    buffer = data;
                    $("#buffer").text(`${ Math.round( buffer.buffer   * 1000 + Number.EPSILON ) / 1000} ${buffer.unit}`);
                });

                $.get("../data/outages", (data, status) => {
                    $('.outage').text('No');
                    const outages = data.outages;
                    for (let p of outages) {
                        $('#' + p).find('.outage').text('yes');
                    }
                });
            }

            update();
            setInterval(update, 5000); 
        </script>



        
    </body>
</html>